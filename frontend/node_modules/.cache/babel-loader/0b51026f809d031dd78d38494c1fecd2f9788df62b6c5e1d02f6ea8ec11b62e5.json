{"ast":null,"code":"var _jsxFileName = \"D:\\\\Mern_AI\\\\frontend\\\\src\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport './Chat.css';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    username\n  } = location.state || {};\n  const handleSendMessage = async () => {\n    if (input) {\n      const userMessage = {\n        sender: 'user',\n        text: input\n      };\n      setMessages([...messages, userMessage]);\n      let inp = \"And Right now answer this query -->\" + input;\n      console.log(input);\n      console.log(\"*****\");\n      const reqq = await axios.post('http://192.168.158.128:5000/api/get-requests', {\n        username: username\n      });\n      let history = \"These are the past seraches of the user(seperated by comma), keep it in mind -->\";\n      let nn = reqq.data.requests.length;\n      for (let i = 0; i < nn; i++) {\n        history = history + reqq.data.requests[i] + \",\";\n      }\n      history = history + inp;\n      console.log(history);\n      // Call the backend API to generate a recipe\n      try {\n        const response = await axios.post('http://192.168.158.128/api/generate-recipe', {\n          input_text: history\n        });\n        const botMessage = {\n          sender: 'bot',\n          text: `Here’s your recipe: ${response.data.recipe}`\n        };\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      } catch (error) {\n        const errorMessage = {\n          sender: 'bot',\n          text: 'Sorry, there was an error generating the recipe.'\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      }\n      try {\n        const response = await axios.post('http://localhost:5000/api/save-request', {\n          username,\n          // Sending username as part of the request body\n          input\n        });\n      } catch (error) {\n        const errorMessage = {\n          sender: 'bot',\n          text: 'Sorry, there was an error saving the prompt.'\n        };\n        setMessages(prevMessages => [...prevMessages, errorMessage]);\n      }\n      setInput('');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('username');\n    navigate('/');\n  };\n  useEffect(() => {\n    const pastMessages = JSON.parse(localStorage.getItem('messages')) || [];\n    setMessages(pastMessages);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('messages', JSON.stringify(messages));\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ChatPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username, \" \\xA0\\xA0 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === 'user' ? 'userMessage' : 'botMessage',\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputArea\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your ingredients...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"EGqNhEwWoCUFrgCbl7Se6xI3krU=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","useLocation","jsxDEV","_jsxDEV","ChatPage","_s","input","setInput","messages","setMessages","navigate","location","username","state","handleSendMessage","userMessage","sender","text","inp","console","log","reqq","post","history","nn","data","requests","length","i","response","input_text","botMessage","recipe","prevMessages","error","errorMessage","handleLogout","localStorage","removeItem","pastMessages","JSON","parse","getItem","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["D:/Mern_AI/frontend/src/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './Chat.css';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction ChatPage() {\r\n  const [input, setInput] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const { username} = location.state || {};\r\n  const handleSendMessage = async () => {\r\n    if (input) {\r\n      const userMessage = { sender: 'user', text: input };\r\n      setMessages([...messages, userMessage]);\r\n      let inp=\"And Right now answer this query -->\"+input;\r\n      console.log(input);\r\n      console.log(\"*****\");\r\n\r\n      const reqq = await axios.post('http://192.168.158.128:5000/api/get-requests', {\r\n        username: username\r\n      });\r\n      let history=\"These are the past seraches of the user(seperated by comma), keep it in mind -->\";\r\n      let nn=reqq.data.requests.length;\r\n      for(let i=0;i<nn;i++)\r\n      {\r\n        history=history+reqq.data.requests[i]+\",\";\r\n      }\r\n      history=history+inp;\r\n      console.log(history);\r\n      // Call the backend API to generate a recipe\r\n      try {\r\n        const response = await axios.post('http://192.168.158.128/api/generate-recipe', {\r\n          input_text: history,\r\n        });\r\n\r\n        const botMessage = {\r\n          sender: 'bot',\r\n          text: `Here’s your recipe: ${response.data.recipe}`,\r\n        };\r\n\r\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n      } catch (error) {\r\n        const errorMessage = { sender: 'bot', text: 'Sorry, there was an error generating the recipe.' };\r\n        setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n      }\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/save-request', {\r\n          username, // Sending username as part of the request body\r\n          input,\r\n        });\r\n      } catch (error) {\r\n        const errorMessage = { sender: 'bot', text: 'Sorry, there was an error saving the prompt.' };\r\n        setMessages((prevMessages) => [...prevMessages, errorMessage]);\r\n      } \r\n      setInput('');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('username');\r\n    navigate('/');\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pastMessages = JSON.parse(localStorage.getItem('messages')) || [];\r\n    setMessages(pastMessages);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('messages', JSON.stringify(messages));\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"ChatPage\">\r\n      <div className=\"header\">\r\n        <h2>Welcome, {username} &nbsp;&nbsp; </h2>\r\n        <button onClick={handleLogout}>Logout</button>\r\n      </div>\r\n      <div className=\"chat\">\r\n        {messages.map((msg, index) => (\r\n          <div key={index} className={msg.sender === 'user' ? 'userMessage' : 'botMessage'}>\r\n            <p>{msg.text}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"inputArea\">\r\n        <textarea\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          placeholder=\"Type your ingredients...\"\r\n        />\r\n        <button onClick={handleSendMessage}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}